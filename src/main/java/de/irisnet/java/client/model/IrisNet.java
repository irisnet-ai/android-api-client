/**
 * Irisnet API
 * Artificial Intelligence (AI) for image- and video-processing in realtime. This is an interactive documentation meant to give a place were you can quickly look up the endpoints and their schemas, while also giving you the option to try things out yourself.  Listed below you'll see the available endpoints of the API that can be expanded by clicking on it. Each expanded endpoint lists the request parameter (if available) and the request body (if available). The request body can list some example bodies and the schema, explaining each model in detail. Additionally you'll find a 'Try it out' button where you can type in your custom parameters and custom body and execute that against the API. The responses section in the expanded endpoint lists the possible responses with their corresponding status codes. If you've executed an API call it will also show you the response from the server.  Underneath the endpoints you'll find the model schemas. These are the models used for the requests and responses. By clicking on the right arrow you can expand the model and it will show you a description of the model and the model parameters. For nested models you can keep clicking the right arrow to reveal further details on it.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package de.irisnet.java.client.model;

import de.irisnet.java.client.model.INObject;
import de.irisnet.java.client.model.INRule;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Contains information on the AI result from the source media check.
 **/
@ApiModel(description = "Contains information on the AI result from the source media check.")
public class IrisNet {
  
  @SerializedName("rulesBroken")
  private Integer rulesBroken = null;
  @SerializedName("helpSuggested")
  private Integer helpSuggested = null;
  @SerializedName("severity")
  private Integer severity = null;
  @SerializedName("getnClasses")
  private Integer getnClasses = null;
  @SerializedName("getnObjects")
  private Integer getnObjects = null;
  @SerializedName("inRule")
  private List<INRule> inRule = null;
  @SerializedName("inObject")
  private List<INObject> inObject = null;

  /**
   * The amount of broken rules that are contained in the source media.
   **/
  @ApiModelProperty(value = "The amount of broken rules that are contained in the source media.")
  public Integer getRulesBroken() {
    return rulesBroken;
  }
  public void setRulesBroken(Integer rulesBroken) {
    this.rulesBroken = rulesBroken;
  }

  /**
   * In cases where the AI is uncertain, this attribute is set (1), indication that it could be useful to double check the source media by a human.
   **/
  @ApiModelProperty(value = "In cases where the AI is uncertain, this attribute is set (1), indication that it could be useful to double check the source media by a human.")
  public Integer getHelpSuggested() {
    return helpSuggested;
  }
  public void setHelpSuggested(Integer helpSuggested) {
    this.helpSuggested = helpSuggested;
  }

  /**
   * The highest severity value found amongst the broken rules.
   **/
  @ApiModelProperty(value = "The highest severity value found amongst the broken rules.")
  public Integer getSeverity() {
    return severity;
  }
  public void setSeverity(Integer severity) {
    this.severity = severity;
  }

  /**
   * The amount of classification objects that were checked against on the source media. This does not mean that all of the classifications were found.
   **/
  @ApiModelProperty(value = "The amount of classification objects that were checked against on the source media. This does not mean that all of the classifications were found.")
  public Integer getGetnClasses() {
    return getnClasses;
  }
  public void setGetnClasses(Integer getnClasses) {
    this.getnClasses = getnClasses;
  }

  /**
   * The amount of objects that were recognized on the source image.
   **/
  @ApiModelProperty(value = "The amount of objects that were recognized on the source image.")
  public Integer getGetnObjects() {
    return getnObjects;
  }
  public void setGetnObjects(Integer getnObjects) {
    this.getnObjects = getnObjects;
  }

  /**
   * This list contains one rule per classification. Rules for classification objects that were not found, are omitted.
   **/
  @ApiModelProperty(value = "This list contains one rule per classification. Rules for classification objects that were not found, are omitted.")
  public List<INRule> getInRule() {
    return inRule;
  }
  public void setInRule(List<INRule> inRule) {
    this.inRule = inRule;
  }

  /**
   * A list of all instances of the classification objects found on the source image.
   **/
  @ApiModelProperty(value = "A list of all instances of the classification objects found on the source image.")
  public List<INObject> getInObject() {
    return inObject;
  }
  public void setInObject(List<INObject> inObject) {
    this.inObject = inObject;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IrisNet irisNet = (IrisNet) o;
    return (this.rulesBroken == null ? irisNet.rulesBroken == null : this.rulesBroken.equals(irisNet.rulesBroken)) &&
        (this.helpSuggested == null ? irisNet.helpSuggested == null : this.helpSuggested.equals(irisNet.helpSuggested)) &&
        (this.severity == null ? irisNet.severity == null : this.severity.equals(irisNet.severity)) &&
        (this.getnClasses == null ? irisNet.getnClasses == null : this.getnClasses.equals(irisNet.getnClasses)) &&
        (this.getnObjects == null ? irisNet.getnObjects == null : this.getnObjects.equals(irisNet.getnObjects)) &&
        (this.inRule == null ? irisNet.inRule == null : this.inRule.equals(irisNet.inRule)) &&
        (this.inObject == null ? irisNet.inObject == null : this.inObject.equals(irisNet.inObject));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.rulesBroken == null ? 0: this.rulesBroken.hashCode());
    result = 31 * result + (this.helpSuggested == null ? 0: this.helpSuggested.hashCode());
    result = 31 * result + (this.severity == null ? 0: this.severity.hashCode());
    result = 31 * result + (this.getnClasses == null ? 0: this.getnClasses.hashCode());
    result = 31 * result + (this.getnObjects == null ? 0: this.getnObjects.hashCode());
    result = 31 * result + (this.inRule == null ? 0: this.inRule.hashCode());
    result = 31 * result + (this.inObject == null ? 0: this.inObject.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class IrisNet {\n");
    
    sb.append("  rulesBroken: ").append(rulesBroken).append("\n");
    sb.append("  helpSuggested: ").append(helpSuggested).append("\n");
    sb.append("  severity: ").append(severity).append("\n");
    sb.append("  getnClasses: ").append(getnClasses).append("\n");
    sb.append("  getnObjects: ").append(getnObjects).append("\n");
    sb.append("  inRule: ").append(inRule).append("\n");
    sb.append("  inObject: ").append(inObject).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
