/**
 * Irisnet API
 * Artificial Intelligence (AI) for image- and video-processing in real-time. This is an interactive documentation where you can quickly look up the endpoints and their schemas, while having the opportunity to try things out for yourself.  In the list below, you can see the available endpoints of the API, which can be expanded by clicking on them. Each expanded endpoint lists the request parameters (if available) and the request body (if available). The request body can list some example bodies and the schema, explaining each model in detail.  Additionally you'll find a 'Try it out' button that allows you to enter your custom parameters and custom body and execute that against the API. <b>Be sure to enter your license key to authorize the requests before using this documentation interactively.</b>  The responses section in the expanded endpoint lists the possible responses with their corresponding status codes. If you've executed an API call it will also show you the response from the server.  Underneath the endpoints you'll find the model schemas. These are the models used for the requests and responses. If you click on the right arrow, you can expand the model and get a description of the model and the model parameters. For nested models, you can keep clicking the right arrow for further details.  Clicking the link below the title at the top of this page opens the [OpenAPI specification](https://swagger.io/specification/) (OAS3) in JSON format. The OAS3 Spec allows the generation of clients in many programming languages. There are several free client generators available that can be used to get started easily.
 *
 * The version of the OpenAPI document: v2
 * Contact: info@irisnet.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package de.irisnet.java.client.model;

import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Summarizing the result of the AI.
 **/
@ApiModel(description = "Summarizing the result of the AI.")
public class Summary {
  
  @SerializedName("status")
  private String status = null;
  @SerializedName("brokenRulesCount")
  private Integer brokenRulesCount = null;
  @SerializedName("helpSuggested")
  private Integer helpSuggested = null;
  @SerializedName("severity")
  private Integer severity = null;
  @SerializedName("creditsConsumed")
  private Integer creditsConsumed = null;
  @SerializedName("tags")
  private Set<String> tags = null;
  @SerializedName("rejectTags")
  private Set<String> rejectTags = null;
  @SerializedName("rejectReasons")
  private Set<String> rejectReasons = null;

  /**
   * A simple status string that can be either _accept_ or _reject_.
   **/
  @ApiModelProperty(value = "A simple status string that can be either _accept_ or _reject_.")
  public String getStatus() {
    return status;
  }
  public void setStatus(String status) {
    this.status = status;
  }

  /**
   * The amount of broken rules that are contained in the source media.
   **/
  @ApiModelProperty(value = "The amount of broken rules that are contained in the source media.")
  public Integer getBrokenRulesCount() {
    return brokenRulesCount;
  }
  public void setBrokenRulesCount(Integer brokenRulesCount) {
    this.brokenRulesCount = brokenRulesCount;
  }

  /**
   * In cases where the AI is uncertain, this attribute is set (1), indication that it could be useful to double check the source media by a human.
   **/
  @ApiModelProperty(value = "In cases where the AI is uncertain, this attribute is set (1), indication that it could be useful to double check the source media by a human.")
  public Integer getHelpSuggested() {
    return helpSuggested;
  }
  public void setHelpSuggested(Integer helpSuggested) {
    this.helpSuggested = helpSuggested;
  }

  /**
   * The highest severity value found amongst the broken rules.
   **/
  @ApiModelProperty(value = "The highest severity value found amongst the broken rules.")
  public Integer getSeverity() {
    return severity;
  }
  public void setSeverity(Integer severity) {
    this.severity = severity;
  }

  /**
   * The amount of credits that was consumed for the check.
   **/
  @ApiModelProperty(value = "The amount of credits that was consumed for the check.")
  public Integer getCreditsConsumed() {
    return creditsConsumed;
  }
  public void setCreditsConsumed(Integer creditsConsumed) {
    this.creditsConsumed = creditsConsumed;
  }

  /**
   * A list of classification names that were found.
   **/
  @ApiModelProperty(value = "A list of classification names that were found.")
  public Set<String> getTags() {
    return tags;
  }
  public void setTags(Set<String> tags) {
    this.tags = tags;
  }

  /**
   * A list of classification names that caused a rule to be broken.
   **/
  @ApiModelProperty(value = "A list of classification names that caused a rule to be broken.")
  public Set<String> getRejectTags() {
    return rejectTags;
  }
  public void setRejectTags(Set<String> rejectTags) {
    this.rejectTags = rejectTags;
  }

  /**
   * The names of the classification groups that caused a rule to be broken.
   **/
  @ApiModelProperty(value = "The names of the classification groups that caused a rule to be broken.")
  public Set<String> getRejectReasons() {
    return rejectReasons;
  }
  public void setRejectReasons(Set<String> rejectReasons) {
    this.rejectReasons = rejectReasons;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Summary summary = (Summary) o;
    return (this.status == null ? summary.status == null : this.status.equals(summary.status)) &&
        (this.brokenRulesCount == null ? summary.brokenRulesCount == null : this.brokenRulesCount.equals(summary.brokenRulesCount)) &&
        (this.helpSuggested == null ? summary.helpSuggested == null : this.helpSuggested.equals(summary.helpSuggested)) &&
        (this.severity == null ? summary.severity == null : this.severity.equals(summary.severity)) &&
        (this.creditsConsumed == null ? summary.creditsConsumed == null : this.creditsConsumed.equals(summary.creditsConsumed)) &&
        (this.tags == null ? summary.tags == null : this.tags.equals(summary.tags)) &&
        (this.rejectTags == null ? summary.rejectTags == null : this.rejectTags.equals(summary.rejectTags)) &&
        (this.rejectReasons == null ? summary.rejectReasons == null : this.rejectReasons.equals(summary.rejectReasons));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    result = 31 * result + (this.brokenRulesCount == null ? 0: this.brokenRulesCount.hashCode());
    result = 31 * result + (this.helpSuggested == null ? 0: this.helpSuggested.hashCode());
    result = 31 * result + (this.severity == null ? 0: this.severity.hashCode());
    result = 31 * result + (this.creditsConsumed == null ? 0: this.creditsConsumed.hashCode());
    result = 31 * result + (this.tags == null ? 0: this.tags.hashCode());
    result = 31 * result + (this.rejectTags == null ? 0: this.rejectTags.hashCode());
    result = 31 * result + (this.rejectReasons == null ? 0: this.rejectReasons.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Summary {\n");
    
    sb.append("  status: ").append(status).append("\n");
    sb.append("  brokenRulesCount: ").append(brokenRulesCount).append("\n");
    sb.append("  helpSuggested: ").append(helpSuggested).append("\n");
    sb.append("  severity: ").append(severity).append("\n");
    sb.append("  creditsConsumed: ").append(creditsConsumed).append("\n");
    sb.append("  tags: ").append(tags).append("\n");
    sb.append("  rejectTags: ").append(rejectTags).append("\n");
    sb.append("  rejectReasons: ").append(rejectReasons).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
